% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/databaseKeyAdd.R
\name{databaseKeyAdd}
\alias{databaseKeyAdd}
\title{databaseKeyAdd}
\arguments{
\item{conn}{Connection to existing database}

\item{key}{New key to encrypt the database, a character string of size 64, containing 32
hex-encoded characters to be used as new key for the database.}

\item{file}{Optional, path to the new encrypted database. a temporary file will be generated if
not provided.}
}
\value{
A named list with True/False and the file name of the encrypted database
}
\description{
Creates a copy of an existing database and encrypts it using the key.
\emph{THIS FUNCTION MAY TAKE LONG FOR BIG DATABASE FILES}
}
\examples{
  key <- "0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF"
  tmp_file <- tempfile()
  con <- dbConnect(RSQLCipher::SQLCipher(), tmp_file)
  dbWriteTable(con, "mtcars", mtcars)

  newDB <- databaseKeyAdd(con, key)
  print(newDB)

  con2 <- dbConnect(RSQLCipher::SQLCipher(), newDB$file) #, key = key)
  dbListTables(con2)

}
